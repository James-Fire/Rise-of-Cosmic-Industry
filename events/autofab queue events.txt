namespace = autofab_queue

event = {
	id = autofab_queue.0
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		every_country = {
			limit = {
				#is_ai = no
				can_use_autofab = yes
				OR = {
					has_queue = yes
					check_variable = { which = autofab_alloy_debt value > 0 }
					any_owned_planet = {
						can_expand_factory = yes
						has_queue = yes
					}
					any_owned_planet = {
						can_expand_factory = yes
					}
					any_owned_planet = {
						NOT = {
							has_planet_flag = has_autofab
							has_planet_flag = building_autofab
							OR = {
								has_planet_flag = factory_autofab_construction_off
								PREV = {
									has_country_flag = factory_autofab_construction_off
								}
							}
						}
					}
				}
			}
			fire_on_action = { on_action = autofab_apply_queue }
		}
	}
}

country_event = {
	id = autofab_queue.1
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		if = {
			limit = {
				check_variable = { which = autofab_alloy_debt value > 0 }
			}
			pay_for_swapping = yes
		}
		document_factory_country = yes
		if = {
			limit = {
				has_global_flag = autofab_logging
			}
			log = "Autofab Queue for [This.GetName]"
		}
		random_list = {
			10 = {
				country_event = { id = autofab_queue.10 days = 5 }
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Queue 5 day delay for [This.GetName]"
				}
			}
			10 = {
				country_event = { id = autofab_queue.10 days = 95 }
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Queue 95 day delay for [This.GetName]"
				}
			}
			10 = {
				country_event = { id = autofab_queue.10 days = 185 }
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Queue 185 day delay for [This.GetName]"
				}
			}
			10 = {
				country_event = { id = autofab_queue.10 days = 275 }
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Queue 275 day delay for [This.GetName]"
				}
			}
		}
		every_country = {
			limit = {
				is_ai = yes
				can_use_autofab = yes
			}
			random_list = {
				10 = {
					country_event = { id = autofab_queue.3 days = 5 }
				}
				10 = {
					country_event = { id = autofab_queue.3 days = 95 }
				}
				10 = {
					country_event = { id = autofab_queue.3 days = 185 }
				}
				10 = {
					country_event = { id = autofab_queue.3 days = 275 }
				}
			}
		}
	}
}

#Autofab Queue
country_event = {
	id = autofab_queue.3
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				any_owned_planet = {
					OR = {
						owner = { is_ai = yes }
						owner = {
							check_variable = { which = autofab_queue value > 0 }
						}
						check_variable = { which = autofab_queue value > 0 }
					}
					can_build_autofab = yes
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Autofab Queue for [This.GetName]"
			}
			random_owned_planet = {
				limit = {
					can_build_autofab = yes
				}
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Autofab Queue found planet [This.GetName] for [PREV.GetName]"
				}
				planet_event = { id = autofab_queue.4 days = -1 } #Autofab
			}
		}
	}
}
#Autofab
planet_event = {
	id = autofab_queue.4
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab = yes
	}
}
planet_event = {
	id = autofab_queue.5
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab = yes
	}
}

#Planet Queue Event
planet_event = {
	id = autofab_queue.8
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		if = {
			limit = {
				has_global_flag = autofab_logging
			}
			log = "Planet Autofab has Autofab Queue and space on [This.GetName] for [PREV.GetName]"
		}
		if = {
			limit = {
				check_variable = { which = autofab_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Autofab Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.4 days = -1 }
			change_variable = { which = autofab_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_energy_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Generator Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.20 days = -1 }
			change_variable = { which = autofab_energy_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_mineral_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Mine Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.22 days = -1 }
			change_variable = { which = autofab_mineral_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_food_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Farm Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.24 days = -1 }
			change_variable = { which = autofab_food_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_alloys_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Foundry Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.26 days = -1 }
			change_variable = { which = autofab_alloys_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_congoods_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Factory Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.28 days = -1 }
			change_variable = { which = autofab_congoods_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_motes_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Chemical Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.30 days = -1 }
			change_variable = { which = autofab_motes_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_gases_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Refinery Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.32 days = -1 }
			change_variable = { which = autofab_gases_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_crystals_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Translucer Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.34 days = -1 }
			change_variable = { which = autofab_crystals_queue value = -1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_extractor_queue value > 0 }
				can_expand_factory = yes
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Planet Autofab has Extractor Queue on [This.GetName] for [PREV.GetName]"
			}
			planet_event = { id = autofab_queue.36 days = -1 }
			change_variable = { which = autofab_extractor_queue value = -1 }
		}
		###Retooling
		else_if = {
			limit = {
				check_variable = { which = autofab_energy_queue value < 0 }
			}
			planet_event = { id = autofab_queue.61 days = -1 }
			change_variable = { which = autofab_energy_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_mineral_queue value < 0 }
			}
			planet_event = { id = autofab_queue.63 days = -1 }
			change_variable = { which = autofab_mineral_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_food_queue value < 0 }
			}
			planet_event = { id = autofab_queue.65 days = -1 }
			change_variable = { which = autofab_food_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_alloys_queue value < 0 }
			}
			planet_event = { id = autofab_queue.67 days = -1 }
			change_variable = { which = autofab_alloys_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_congoods_queue value < 0 }
			}
			planet_event = { id = autofab_queue.69 days = -1 }
			change_variable = { which = autofab_congoods_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_motes_queue value < 0 }
			}
			planet_event = { id = autofab_queue.71 days = -1 }
			change_variable = { which = autofab_motes_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_gases_queue value < 0 }
			}
			planet_event = { id = autofab_queue.73 days = -1 }
			change_variable = { which = autofab_gases_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_crystals_queue value < 0 }
			}
			planet_event = { id = autofab_queue.75 days = -1 }
			change_variable = { which = autofab_crystals_queue value = 1 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_extractor_queue value < 0 }
			}
			planet_event = { id = autofab_queue.77 days = -1 }
			change_variable = { which = autofab_extractor_queue value = 1 }
		}
	}
}

#Distribution Queue
country_event = {
	id = autofab_queue.10
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		every_owned_planet = {
			limit = {
				has_queue = yes
			}
			if = {
				limit = {
					NOT = {
						has_planet_flag = factory_expanding
					}
					#can_queue_factory = yes
				}
				fire_on_action = { on_action = autofab_apply_planet_queue scopes = { from = owner } }
			}
		}
		###Building
		if = {
			limit = {
				has_country_flag = factory_autofab_construction_on
				check_variable = { which = autofab_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Autofab Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.3 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_energy_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Energy Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.11 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_mineral_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Minerals Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.12 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_food_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Food Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.13 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_alloys_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Alloys Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.14 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_congoods_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Consumer Goods Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.15 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_motes_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Chemical Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.16 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_gases_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Refinery Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.17 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_crystals_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Translucer Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.18 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_extractor_queue value > 0 }
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab has Extractor Queue for [This.GetName]"
			}
			country_event = { id = autofab_queue.19 days = -1 }
		}
		###Retooling
		if = {
			limit = {
				check_variable = { which = autofab_energy_queue value < 0 }
			}
			country_event = { id = autofab_queue.50 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_mineral_queue value < 0 }
			}
			country_event = { id = autofab_queue.51 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_food_queue value < 0 }
			}
			country_event = { id = autofab_queue.52 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_alloys_queue value < 0 }
			}
			country_event = { id = autofab_queue.53 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_congoods_queue value < 0 }
			}
			country_event = { id = autofab_queue.54 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_motes_queue value < 0 }
			}
			country_event = { id = autofab_queue.55 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_gases_queue value < 0 }
			}
			country_event = { id = autofab_queue.56 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_crystals_queue value < 0 }
			}
			country_event = { id = autofab_queue.57 days = -1 }
		}
		if = {
			limit = {
				check_variable = { which = autofab_extractor_queue value < 0 }
			}
			country_event = { id = autofab_queue.58 days = -1 }
		}
	}
}
#Energy Queue
country_event = {
	id = autofab_queue.11
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_energy_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						is_energy_colony = yes
						can_build_fallback_planet = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Energy Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_afford_module = yes
						can_expand_factory = yes
						can_queue_factory = yes
						is_energy_colony = yes
					}
				}
				random_owned_planet = {
					limit = {
						can_afford_module = yes
						can_expand_factory = yes
						can_queue_factory = yes
						is_energy_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Energy Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.20 days = -1 } #Energy
					owner = { change_variable = { which = autofab_energy_queue value = -1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_afford_module = yes
						can_expand_factory = yes
						can_queue_factory = yes
						can_build_fallback_planet = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Energy Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.20 days = -1 } #Energy
					owner = { change_variable = { which = autofab_energy_queue value = -1 } }
				}
			}
		}
	}
}
#Mineral Queue
country_event = {
	id = autofab_queue.12
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_mineral_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						can_build_fallback_planet = yes
						is_mining_colony = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Minerals Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_expand_factory = yes
						is_mining_colony = yes
					}
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						is_mining_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Mineral Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.22 days = -1 } #Minerals
					owner = { change_variable = { which = autofab_mineral_queue value = -1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						OR = {
							ROOT = { has_country_flag = factory_fallback }
							has_planet_flag = factory_fallback
						}
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Mineral Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.22 days = -1 } #Minerals
					owner = { change_variable = { which = autofab_mineral_queue value = -1 } }
				}
			}
		}
	}
}
#Food Queue
country_event = {
	id = autofab_queue.13
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_food_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						can_build_fallback_planet = yes
						is_farming_colony = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Food Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_expand_factory = yes
						is_farming_colony = yes
					}
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						is_farming_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Food Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.24 days = -1 } #Food
					owner = { change_variable = { which = autofab_food_queue value = -1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						OR = {
							ROOT = { has_country_flag = factory_fallback }
							has_planet_flag = factory_fallback
						}
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Food Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.24 days = -1 } #Food
					owner = { change_variable = { which = autofab_food_queue value = -1 } }
				}
			}
		}
	}
}
#Alloys Queue
country_event = {
	id = autofab_queue.14
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_alloys_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						can_build_fallback_planet = yes
						is_alloys_colony = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Alloys Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_expand_factory = yes
						is_alloys_colony = yes
					}
				}
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Alloys Queue found Alloys planet for [PREV.GetName]"
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						is_alloys_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Alloys Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.26 days = -1 } #Alloys
					owner = { change_variable = { which = autofab_alloys_queue value = -1 } }
				}
			}
			else = {
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Alloys Queue found fallback Alloys planet for [PREV.GetName]"
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						OR = {
							ROOT = { has_country_flag = factory_fallback }
							has_planet_flag = factory_fallback
						}
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Alloys Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.26 days = -1 } #Alloys
					owner = { change_variable = { which = autofab_alloys_queue value = -1 } }
				}
			}
		}
	}
}
#ConGoods Queue
country_event = {
	id = autofab_queue.15
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_congoods_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						can_build_fallback_planet = yes
						is_congood_colony = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab ConGoods Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_expand_factory = yes
						is_congood_colony = yes
					}
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						is_congood_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Consumer Goods Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.28 days = -1 } #ConGoods
					owner = { change_variable = { which = autofab_congoods_queue value = -1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						OR = {
							ROOT = { has_country_flag = factory_fallback }
							has_planet_flag = factory_fallback
						}
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Consumer Goods Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.28 days = -1 } #ConGoods
					owner = { change_variable = { which = autofab_congoods_queue value = -1 } }
				}
			}
		}
	}
}
#Motes Queue
country_event = {
	id = autofab_queue.16
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_motes_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						can_build_fallback_planet = yes
						is_refinery_colony = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Motes Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_expand_factory = yes
						is_refinery_colony = yes
					}
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						is_refinery_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Motes Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.30 days = -1 } #Motes
					owner = { change_variable = { which = autofab_motes_queue value = -1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						OR = {
							ROOT = { has_country_flag = factory_fallback }
							has_planet_flag = factory_fallback
						}
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Motes Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.30 days = -1 } #Motes
					owner = { change_variable = { which = autofab_motes_queue value = -1 } }
				}
			}
		}
	}
}
#Gases Queue
country_event = {
	id = autofab_queue.17
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_gases_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						can_build_fallback_planet = yes
						is_refinery_colony = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Gases Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_expand_factory = yes
						is_refinery_colony = yes
					}
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						is_refinery_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Gases Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.32 days = -1 } #Gases
					owner = { change_variable = { which = autofab_gases_queue value = -1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						OR = {
							ROOT = { has_country_flag = factory_fallback }
							has_planet_flag = factory_fallback
						}
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Gases Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.32 days = -1 } #Gases
					owner = { change_variable = { which = autofab_gases_queue value = -1 } }
				}
			}
		}
	}
}
#Crystals Queue
country_event = {
	id = autofab_queue.18
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_crystals_queue value > 0 }
				any_owned_planet = {
					can_afford_module = yes
					can_expand_factory = yes
					can_queue_factory = yes
					OR = {
						can_build_fallback_planet = yes
						is_refinery_colony = yes
					}
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Crystals Queue can afford for [This.GetName]"
			}
			if = {
				limit = {
					any_owned_planet = {
						can_expand_factory = yes
						is_refinery_colony = yes
					}
				}
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						is_refinery_colony = yes
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Crystals Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.34 days = -1 } #Crystals
					owner = { change_variable = { which = autofab_crystals_queue value = -1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_expand_factory = yes
						OR = {
							ROOT = { has_country_flag = factory_fallback }
							has_planet_flag = factory_fallback
						}
					}
					if = {
						limit = {
							has_global_flag = autofab_logging
						}
						log = "Autofab Crystals Queue found planet [This.GetName] for [PREV.GetName]"
					}
					planet_event = { id = autofab_queue.34 days = -1 } #Crystals
					owner = { change_variable = { which = autofab_crystals_queue value = -1 } }
				}
			}
		}
	}
}
#Extractor Queue
country_event = {
	id = autofab_queue.19
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_extractor_queue value > 0 }
				any_owned_planet = {
					NOT = { has_planet_flag = has_autofab_extractor }
					has_rare_resource_deposit = yes
					can_queue_factory = yes
					can_afford_module = yes
				}
			}
			if = {
				limit = {
					has_global_flag = autofab_logging
				}
				log = "Autofab Extractor Queue can afford for [This.GetName]"
			}
			random_owned_planet = {
				limit = {
					can_expand_factory = yes
					NOT = { has_planet_flag = has_autofab_extractor }
					has_rare_resource_deposit = yes
				}
				if = {
					limit = {
						has_global_flag = autofab_logging
					}
					log = "Autofab Extractor Queue found planet [This.GetName] for [PREV.GetName]"
				}
				planet_event = { id = autofab_queue.36 days = -1 } #Extractor
				owner = { change_variable = { which = autofab_extractor_queue value = -1 } }
			}
		}
	}
}


###Script Events

#Generator
planet_event = {
	id = autofab_queue.20
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_power = yes
	}
}
planet_event = {
	id = autofab_queue.21
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_power = yes
	}
}

#Mine
planet_event = {
	id = autofab_queue.22
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_mine = yes
	}
}
planet_event = {
	id = autofab_queue.23
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_mine = yes
	}
}

#Farm
planet_event = {
	id = autofab_queue.24
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_farm = yes
	}
}
planet_event = {
	id = autofab_queue.25
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_farm = yes
	}
}

#Foundry
planet_event = {
	id = autofab_queue.26
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_foundry = yes
	}
}
planet_event = {
	id = autofab_queue.27
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_foundry = yes
	}
}

#Factory
planet_event = {
	id = autofab_queue.28
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_factory = yes
	}
}
planet_event = {
	id = autofab_queue.29
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_factory = yes
	}
}

#Chemical
planet_event = {
	id = autofab_queue.30
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_chemical = yes
	}
}
planet_event = {
	id = autofab_queue.31
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_chemical = yes
	}
}

#Refinery
planet_event = {
	id = autofab_queue.32
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_refinery = yes
	}
}
planet_event = {
	id = autofab_queue.33
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_refinery = yes
	}
}

#Translucer
planet_event = {
	id = autofab_queue.34
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_translucer = yes
	}
}
planet_event = {
	id = autofab_queue.35
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_translucer = yes
	}
}

#Extractor
planet_event = {
	id = autofab_queue.36
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_extractor = yes
	}
}
planet_event = {
	id = autofab_queue.37
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		add_autofab_extractor = yes
	}
}

###Retooling

#Energy Retooling
country_event = {
	id = autofab_queue.50
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_energy_queue value < 0 }
				OR = {
					any_owned_planet = {
						has_energy_factory = yes
						can_queue_factory = yes
					}
					any_owned_planet = {
						is_energy_colony = yes
						has_energy_factory = yes
						can_queue_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_energy_factory = yes
						NOT = {
							is_energy_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_energy_factory = yes
						NOT = {
							is_energy_colony = yes
						}
					}
					planet_event = { id = autofab_queue.61 days = -1 } #Retool Energy
					owner = { change_variable = { which = autofab_energy_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_energy_factory = yes
					}
					planet_event = { id = autofab_queue.61 days = -1 } #Retool Energy
					owner = { change_variable = { which = autofab_energy_queue value = 1 } }
				}
			}
		}
	}
}

#Minerals Retooling
country_event = {
	id = autofab_queue.51
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_mineral_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_minerals_factory = yes
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_mining_colony = yes
						has_minerals_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_minerals_factory = yes
						NOT = {
							is_mining_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_minerals_factory = yes
						NOT = {
							is_mining_colony = yes
						}
					}
					planet_event = { id = autofab_queue.63 days = -1 } #Retool Minerals
					owner = { change_variable = { which = autofab_mineral_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_minerals_factory = yes
					}
					planet_event = { id = autofab_queue.63 days = -1 } #Retool Minerals
					owner = { change_variable = { which = autofab_mineral_queue value = 1 } }
				}
			}
		}
	}
}

#Food Retooling
country_event = {
	id = autofab_queue.52
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_food_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_food_factory = yes
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_farming_colony = yes
						has_food_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_food_factory = yes
						NOT = {
							is_farming_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_food_factory = yes
						NOT = {
							is_farming_colony = yes
						}
					}
					planet_event = { id = autofab_queue.65 days = -1 } #Retool Food
					owner = { change_variable = { which = autofab_food_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_food_factory = yes
					}
					planet_event = { id = autofab_queue.65 days = -1 } #Retool Food
					owner = { change_variable = { which = autofab_food_queue value = 1 } }
				}
			}
		}
	}
}

#Alloys Retooling
country_event = {
	id = autofab_queue.53
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_alloys_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_alloys_factory = yes
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_alloys_colony = yes
						has_alloys_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_alloys_factory = yes
						NOT = {
							is_alloys_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_alloys_factory = yes
						NOT = {
							is_alloys_colony = yes
						}
					}
					planet_event = { id = autofab_queue.67 days = -1 } #Retool Alloys
					owner = { change_variable = { which = autofab_alloys_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_alloys_factory = yes
					}
					planet_event = { id = autofab_queue.67 days = -1 } #Retool Alloys
					owner = { change_variable = { which = autofab_alloys_queue value = 1 } }
				}
			}
		}
	}
}

#ConGoods Retooling
country_event = {
	id = autofab_queue.54
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_congoods_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_congoods_factory = yes
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_congood_colony = yes
						has_congoods_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_congoods_factory = yes
						NOT = {
							is_congood_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_congoods_factory = yes
						NOT = {
							is_congood_colony = yes
						}
					}
					planet_event = { id = autofab_queue.69 days = -1 } #Retool ConGoods
					owner = { change_variable = { which = autofab_congoods_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_congoods_factory = yes
					}
					planet_event = { id = autofab_queue.69 days = -1 } #Retool ConGoods
					owner = { change_variable = { which = autofab_congoods_queue value = 1 } }
				}
			}
		}
	}
}

#Motes Retooling
country_event = {
	id = autofab_queue.55
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_motes_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_motes_factory = yes
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_refinery_colony = yes
						has_motes_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_motes_factory = yes
						NOT = {
							is_refinery_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_motes_factory = yes
						NOT = {
							is_refinery_colony = yes
						}
					}
					planet_event = { id = autofab_queue.71 days = -1 } #Retool Motes
					owner = { change_variable = { which = autofab_motes_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_motes_factory = yes
					}
					planet_event = { id = autofab_queue.71 days = -1 } #Retool Motes
					owner = { change_variable = { which = autofab_motes_queue value = 1 } }
				}
			}
		}
	}
}

#Gases Retooling
country_event = {
	id = autofab_queue.56
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_gases_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_gases_factory = yes
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_refinery_colony = yes
						has_gases_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_gases_factory = yes
						NOT = {
							is_refinery_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_gases_factory = yes
						NOT = {
							is_refinery_colony = yes
						}
					}
					planet_event = { id = autofab_queue.73 days = -1 } #Retool Gases
					owner = { change_variable = { which = autofab_gases_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_gases_factory = yes
					}
					planet_event = { id = autofab_queue.73 days = -1 } #Retool Gases
					owner = { change_variable = { which = autofab_gases_queue value = 1 } }
				}
			}
		}
	}
}

#Crystals Retooling
country_event = {
	id = autofab_queue.57
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_crystals_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_crystals_factory = yes
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_refinery_colony = yes
						has_crystals_factory = yes
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_crystals_factory = yes
						NOT = {
							is_refinery_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_crystals_factory = yes
						NOT = {
							is_refinery_colony = yes
						}
					}
					planet_event = { id = autofab_queue.75 days = -1 } #Retool Crystals
					owner = { change_variable = { which = autofab_crystals_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_crystals_factory = yes
					}
					planet_event = { id = autofab_queue.75 days = -1 } #Retool Crystals
					owner = { change_variable = { which = autofab_crystals_queue value = 1 } }
				}
			}
		}
	}
}

#Extractor Retooling
country_event = {
	id = autofab_queue.58
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		while = {
			limit = {
				check_variable = { which = autofab_extractor_queue value < 0 }
				OR = {
					any_owned_planet = {
						can_queue_factory = yes
						has_planet_flag = has_autofab_extractor
					}
					any_owned_planet = {
						can_queue_factory = yes
						is_refinery_colony = yes
						has_planet_flag = has_autofab_extractor
					}
				}
			}
			if = {
				limit = {
					any_owned_planet = {
						can_queue_factory = yes
						has_planet_flag = has_autofab_extractor
						NOT = {
							is_refinery_colony = yes
						}
					}
				}
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_planet_flag = has_autofab_extractor
						NOT = {
							is_refinery_colony = yes
						}
					}
					planet_event = { id = autofab_queue.77 days = -1 } #Retool Extractor
					owner = { change_variable = { which = autofab_extractor_queue value = 1 } }
				}
			}
			else = {
				random_owned_planet = {
					limit = {
						can_queue_factory = yes
						has_planet_flag = has_autofab_extractor
					}
					planet_event = { id = autofab_queue.77 days = -1 } #Retool Extractor
					owner = { change_variable = { which = autofab_extractor_queue value = 1 } }
				}
			}
		}
	}
}

##Retooling Script Events

#Generator
planet_event = {
	id = autofab_queue.61
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_power_retool = yes
	}
}
planet_event = {
	id = autofab_queue.62
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_power = yes
	}
}

#Mine
planet_event = {
	id = autofab_queue.63
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_mine_retool = yes
	}
}
planet_event = {
	id = autofab_queue.64
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_mine = yes
	}
}

#Farm
planet_event = {
	id = autofab_queue.65
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_farm_retool = yes
	}
}
planet_event = {
	id = autofab_queue.66
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_farm = yes
	}
}

#Foundry
planet_event = {
	id = autofab_queue.67
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_foundry_retool = yes
	}
}
planet_event = {
	id = autofab_queue.68
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_foundry = yes
	}
}

#Factory
planet_event = {
	id = autofab_queue.69
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_factory_retool = yes
	}
}
planet_event = {
	id = autofab_queue.70
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_factory = yes
	}
}

#Chemical
planet_event = {
	id = autofab_queue.71
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_chemical_retool = yes
	}
}
planet_event = {
	id = autofab_queue.72
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_chemical = yes
	}
}

#Refinery
planet_event = {
	id = autofab_queue.73
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_refinery_retool = yes
	}
}
planet_event = {
	id = autofab_queue.74
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_refinery = yes
	}
}

#Translucer
planet_event = {
	id = autofab_queue.75
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_translucer_retool = yes
	}
}
planet_event = {
	id = autofab_queue.76
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_translucer = yes
	}
}

#Extractor
planet_event = {
	id = autofab_queue.77
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		start_autofab_extractor_retool = yes
	}
}
planet_event = {
	id = autofab_queue.78
	is_triggered_only = yes
	hide_window = yes
	
	immediate = {
		retool_autofab_extractor = yes
	}
}