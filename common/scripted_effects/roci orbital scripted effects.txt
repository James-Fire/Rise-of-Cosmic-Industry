set_infrastructure_amount = {
	if = {
		limit = {
			NOT = { is_variable_set = orbital_infrastructure_space }
		}
		set_variable = { which = orbital_infrastructure_space value = 0 }
	}
	set_variable = { which = orbitalinfra_platforms value = 0 }
	set_variable = { which = orbital_infrastructure_planet_size value = trigger:planet_size }
	multiply_variable = { which = orbital_infrastructure_planet_size value = trigger:planet_size }
	multiply_variable = { which = orbital_infrastructure_planet_size value = 0.1 }
	if = {
		limit = {
			has_global_flag = bigger_colonies_defines_active
		}
		multiply_variable = { which = orbital_infrastructure_planet_size value = 2 }
	}
	ceiling_variable = orbital_infrastructure_planet_size
	change_variable = { which = orbital_infrastructure_max value = orbital_infrastructure_planet_size }
	change_variable = { which = orbital_infrastructure_space value = orbital_infrastructure_planet_size }
	set_variable = { which = orbital_infrastructure value = 0 }
	add_modifier = { modifier = orbital_space }
	
	set_variable = { which = orbitalinfra_cities value = 0 }
	set_variable = { which = orbitalinfra_industry value = 0 }
	set_variable = { which = orbitalinfra_research value = 0 }
	set_variable = { which = orbitalinfra_refinery value = 0 }
	set_variable = { which = orbitalinfra_farming value = 0 }
	set_variable = { which = orbitalinfra_mining value = 0 }
	set_variable = { which = orbitalinfra_commercial value = 0 }
	set_variable = { which = orbitalinfra_solar value = 0 }
	set_variable = { which = orbitalinfra_shipyard value = 0 }
	set_variable = { which = orbitalinfra_military value = 0 }
	set_variable = { which = orbitalinfra_admin value = 0 }
	if = {
		limit = {
			owner = {
				has_technology = tech_starbase_3
			}
		}
		upgrade_infrastructure_amount = yes
	}
	if = {
		limit = {
			owner = {
				has_technology = tech_starbase_4
			}
		}
		upgrade_infrastructure_amount = yes
	}
	if = {
		limit = {
			owner = {
				has_technology = tech_starbase_5
			}
		}
		upgrade_infrastructure_amount = yes
	}
	if = {
		limit = {
			owner = {
				has_technology = tech_habitat_1
			}
		}
		upgrade_infrastructure_amount = yes
	}
	if = {
		limit = {
			owner = {
				has_technology = tech_habitat_2
			}
		}
		upgrade_infrastructure_amount = yes
	}
	if = {
		limit = {
			owner = {
				has_technology = tech_habitat_3
			}
		}
		upgrade_infrastructure_amount = yes
	}
}

upgrade_infrastructure_amount = {
	change_variable = { which = orbital_infrastructure_space value = 1 }

	set_variable = { which = orbital_infrastructure_upgrade value = trigger:planet_size }
	multiply_variable = { which = orbital_infrastructure_upgrade value = 0.1 }
	if = {
		limit = {
			has_global_flag = bigger_colonies_defines_active
		}
		multiply_variable = { which = orbital_infrastructure_upgrade value = 2 }
	}
	ceiling_variable = orbital_infrastructure_upgrade
	change_variable = { which = orbital_infrastructure_max value = orbital_infrastructure_upgrade }
	change_variable = { which = orbital_infrastructure_space value = orbital_infrastructure_upgrade }
}

update_oi_district_counts = {
	set_variable = { which = orbital_infrastructure value = value:orbital_district_count }
	
	update_oi_modifiers = yes
}

update_oi_modifiers = {
	set_variable = { which = orbital_infrastructure value = value:orbital_district_count }
	export_trigger_value_to_variable = {
		trigger = num_districts
		parameters = { type = district_orbital_platform_military }
		variable = orbitalinfra_military
	}
	#Military Districts make platforms
	if = {
		limit = {
			exists = owner
			check_variable = { which = orbitalinfra_military value > 0 }
		}
		oi_update_platforms = yes
	}
	#Apply Shipyard bonuses
	if = {
		limit = {
			exists = owner
			check_variable = { which = orbitalinfra_shipyard value > 0 }
			always = no #Lock it out until Starbase buildings are fixed
		}
		solar_system = {
			every_system_planet = {
				remove_planet_flag = orbitalinfra_shipyard_update
			}
			
			starbase = {
				PREV = {
					while = {
						limit = {
							any_system_planet = {
								NOT = { has_planet_flag = orbitalinfra_shipyard_update }
							}
						}
						random_system_planet = {
							limit = {
								check_variable = { which = orbitalinfra_shipyard value > 0 }
								NOT = { has_planet_flag = orbitalinfra_shipyard_update }
							}
							set_planet_flag = orbitalinfra_shipyard_update
							solar_system = {
								if = {
									limit = {
										any_system_megastructure = {
											OR = {
												is_megastructure_type = mega_shipyard_1
												is_megastructure_type = mega_shipyard_2
												is_megastructure_type = mega_shipyard_3
											}
										}
									}
									random_system_megastructure = {
										limit = {
											OR = {
												is_megastructure_type = mega_shipyard_1
												is_megastructure_type = mega_shipyard_2
												is_megastructure_type = mega_shipyard_3
											}
										}
										set_variable = { which = orbitalinfra_shipyard value = PREVPREV.orbitalinfra_shipyard }
										if = {
											limit = {
												check_variable = { which = orbitalinfra_shipyard value > 9 }
											}
											add_modifier = {
												modifier = oi_shipyard_limited
												multiplier = 10
												clear_on_owner_change = yes
											}
										}
										else = {
											add_modifier = {
												modifier = oi_shipyard_limited
												multiplier = orbitalinfra_shipyard
												clear_on_owner_change = yes
											}
										}
										add_modifier = {
											modifier = oi_shipyard
											multiplier = orbitalinfra_shipyard
											clear_on_owner_change = yes
										}
									}
								}
								else = {
									starbase = {
										set_variable = { which = orbitalinfra_shipyard value = PREVPREV.orbitalinfra_shipyard }
									}
								}
							}
						}
					}
				}
			}
		}
	}
}

#Planet Scope
oi_update_platforms = {
	set_variable = { which = orbitalinfra_military_platforms value = owner.orbitalinfra_military_platforms }
	set_variable = { which = orbitalinfra_military_ion_cannons value = owner.orbitalinfra_military_ion_cannons }
	multiply_variable = { which = orbitalinfra_military_platforms value = orbitalinfra_military }
	multiply_variable = { which = orbitalinfra_military_ion_cannons value = orbitalinfra_military }
	if = {
		limit = {
			exists = owner
			owner = { has_active_tradition = tr_unyielding_finish }
		}
		multiply_variable = { which = orbitalinfra_military_platforms value = 1.5 }
		multiply_variable = { which = orbitalinfra_military_ion_cannons value = 1.5 }
	}
	if = {
		limit = {
			NOT = {
				exists = event_target:defense_fleet@this
			}
			NOT = {
				solar_system = {
					any_fleet_in_system = {
						has_fleet_flag = orbital_infra_defense@prevprev
					}
				}
			}
		}
		create_fleet = {
			name = "\\[prev.GetName] Defense Force"
			effect = {
				set_owner = from.owner
				while = {
					count = from.orbitalinfra_military_platforms
					create_ship = {
						name = random
						random_existing_design = military_station_small
						prefix = yes
					}
				}
				while = {
					count = from.orbitalinfra_military_ion_cannons
					create_ship = {
						name = random
						random_existing_design = ion_cannon
						prefix = yes
					}
				}
				set_location = {
					target = prev
					distance = 0
					angle = 0
					direction = in_system
				}
				save_global_event_target_as = defense_fleet@prev
				set_formation_scale = 3
				set_fleet_flag = orbital_infra_defense@prev
				set_fleet_flag = orbital_infra_defense
			}
		}
	}
	else = {
		solar_system = {
			every_fleet_in_system = {
				limit = {
					has_fleet_flag = orbital_infra_defense@prevprev
					exists = owner
					has_fleet_flag = orbital_infra_defense
				}
				while = {
					count = prevprev.orbitalinfra_military_platforms
					limit = {
						count_owned_ship = { limit = { is_ship_size = military_station_small } count < prevprev.orbitalinfra_military_platforms }
					}
					create_ship = {
						name = random
						random_existing_design = military_station_small
						prefix = yes
					}
				}
				while = {
					count = prevprev.orbitalinfra_military_ion_cannons
					limit = {
						count_owned_ship = { limit = { is_ship_size = ion_cannon } count < prevprev.orbitalinfra_military_ion_cannons }
					}
					create_ship = {
						name = random
						random_existing_design = ion_cannon
						prefix = yes
					}
				}
				while = {
					limit = {
						count_owned_ship = { limit = { is_ship_size = military_station_small } count > prevprev.orbitalinfra_military_platforms }
					}
					random_owned_ship = {
						limit = {
							is_ship_size = military_station_small
						}
						delete_ship = this
					}
				}
				while = {
					limit = {
						count_owned_ship = { limit = { is_ship_size = ion_cannon } count > prevprev.orbitalinfra_military_ion_cannons }
					}
					random_owned_ship = {
						limit = {
							is_ship_size = ion_cannon
						}
						delete_ship = this
					}
				}
			}
		}
	}
	planet_event = { id = orbitalinfra.6 days = 30 }
}

alloy_ai_orbital_cost = {
	owner = {
		if = {
			limit = {
				is_ai = yes
			}
			change_variable = { which = orbital_infra_ai_alloy_debt value = 300 }
			ai_orbital_pay_alloy_debt = yes
		}
	}
}

#Country Scope
ai_orbital_pay_alloy_debt = {
	export_resource_stockpile_to_variable = { resource = alloys variable = orbital_infra_alloy_tracking }
	if = {
		limit = {
			check_variable = { which = orbital_infra_ai_alloy_debt value > orbital_infra_alloy_tracking }
		}
		floor_variable = orbital_infra_alloy_tracking
		subtract_variable = { which = orbital_infra_ai_alloy_debt value = orbital_infra_alloy_tracking }
		set_variable = { which = orbital_infra_alloy_debt_payment value = orbital_infra_alloy_tracking }
	}
	else_if = {
		limit = {
			check_variable = { which = orbital_infra_ai_alloy_debt value <= orbital_infra_alloy_tracking }
		}
		set_variable = { which = orbital_infra_alloy_debt_payment value = orbital_infra_ai_alloy_debt }
	}
	add_resource = {
		alloys = -1
		mult = orbital_infra_alloy_debt_payment
	}
}

alloy_ai_orbital_military_cost = {
	owner = {
		if = {
			limit = {
				is_ai = yes
			}
			change_variable = { which = orbital_infra_ai_alloy_debt value = 500 }
			if = {
				limit = {
					has_technology = tech_starbase_3
				}
				change_variable = { which = orbital_infra_ai_alloy_debt value = 200 }
			}
			if = {
				limit = {
					has_technology = tech_starbase_4
				}
				change_variable = { which = orbital_infra_ai_alloy_debt value = 200 }
			}
			if = {
				limit = {
					has_technology = tech_starbase_5
				}
				change_variable = { which = orbital_infra_ai_alloy_debt value = 200 }
			}
		}
		ai_orbital_pay_alloy_debt = yes
	}
}