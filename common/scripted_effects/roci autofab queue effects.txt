clear_queue = {
	set_variable = { which = autofab_queue value = 0 }
	set_variable = { which = autofab_energy_queue value = 0 }
	set_variable = { which = autofab_mineral_queue value = 0 }
	set_variable = { which = autofab_food_queue value = 0 }
	set_variable = { which = autofab_alloys_queue value = 0 }
	set_variable = { which = autofab_congoods_queue value = 0 }
	set_variable = { which = autofab_motes_queue value = 0 }
	set_variable = { which = autofab_gases_queue value = 0 }
	set_variable = { which = autofab_crystals_queue value = 0 }
	set_variable = { which = autofab_extractor_queue value = 0 }
}
pay_for_swapping = {
	export_resource_stockpile_to_variable = { resource = alloys variable = autofab_alloys_tracking }
	if = {
		limit = {
			check_variable = { which = autofab_alloys_tracking value > autofab_alloy_debt }
		}
		add_resource = {
			alloys = -1
			mult = autofab_alloy_debt
		}
		set_variable = { which = autofab_alloy_debt value = 0 }
	}
	else = {
		change_variable = { which = autofab_alloys_tracking value = -1 }
		round_variable = autofab_alloys_tracking
		add_resource = {
			alloys = -1
			mult = autofab_alloys_tracking
		}
		subtract_variable = { which = autofab_alloy_debt value = autofab_alloys_tracking }
	}
}

#Planet Scope
pay_for_autofab = {
	owner = {
		add_resource = {
			energy = @Negautofab_cost
		}
		add_resource = {
			minerals = @Negautofab_cost
		}
	}
}
pay_for_district = {
	if = {
		limit = {
			uses_base_district_set = yes
		}
		owner = {
			add_resource = {
				minerals = @Negdistrictcost
			}
			add_resource = {
				alloys = @Negfactoryalloycost
			}
		}
	}
	else_if = {
		limit = {
			uses_habitat_district_set = yes
		}
		owner = {
			add_resource = {
				minerals = @Neghabdistrictcost
			}
			add_resource = {
				alloys = @Negfactoryalloycost
			}
		}
	}
	else_if = {
		limit = {
			uses_city_district_set = yes
		}
		owner = {
			add_resource = {
				minerals = @Negcitydistrictcost
			}
			add_resource = {
				alloys = @Negfactoryalloycost
			}
		}
	}
	else_if = {
		limit = {
			uses_ringworld_district_set = yes
		}
		owner = {
			add_resource = {
				minerals = @Negringdistrictcost
			}
			add_resource = {
				alloys = @Negfactoryalloycost
			}
		}
	}
}

autofab_time_loop = {
	if = {
		limit = {
			check_variable = { which = autofab_construction_time value > 0 }
		}
		set_variable = { which = autofab_build_speed value = 0 }
		export_modifier_to_variable = { modifier = planet_colony_development_speed_mult variable = autofab_build_speed }
		change_variable = { which = autofab_build_speed value = 1 }
		if = {
			limit = {
				check_variable = { which = autofab_construction_time value >= 30 }
			}
			set_variable = { which = autofab_construction_progress value = 30 }
			multiply_variable = { which = autofab_construction_progress value = autofab_build_speed }
			round_variable = autofab_construction_progress
			subtract_variable = { which = autofab_construction_time value = autofab_construction_progress }
			planet_event = { id = autofab_queue.4 days = 30 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_construction_time value >= 15 }
			}
			set_variable = { which = autofab_construction_progress value = 15 }
			multiply_variable = { which = autofab_construction_progress value = autofab_build_speed }
			round_variable = autofab_construction_progress
			subtract_variable = { which = autofab_construction_time value = autofab_construction_progress }
			planet_event = { id = autofab_queue.4 days = 15 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_construction_time value >= 10 }
			}
			set_variable = { which = autofab_construction_progress value = 10 }
			multiply_variable = { which = autofab_construction_progress value = autofab_build_speed }
			round_variable = autofab_construction_progress
			subtract_variable = { which = autofab_construction_time value = autofab_construction_progress }
			planet_event = { id = autofab_queue.4 days = 10 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_construction_time value >= 5 }
			}
			set_variable = { which = autofab_construction_progress value = 5 }
			multiply_variable = { which = autofab_construction_progress value = autofab_build_speed }
			round_variable = autofab_construction_progress
			subtract_variable = { which = autofab_construction_time value = autofab_construction_progress }
			planet_event = { id = autofab_queue.4 days = 5 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_construction_time value >= 3 }
			}
			set_variable = { which = autofab_construction_progress value = 3 }
			multiply_variable = { which = autofab_construction_progress value = autofab_build_speed }
			round_variable = autofab_construction_progress
			subtract_variable = { which = autofab_construction_time value = autofab_construction_progress }
			planet_event = { id = autofab_queue.4 days = 2 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_construction_time value >= 1 }
			}
			set_variable = { which = autofab_construction_progress value = 1 }
			multiply_variable = { which = autofab_construction_progress value = autofab_build_speed }
			round_variable = autofab_construction_progress
			subtract_variable = { which = autofab_construction_time value = autofab_construction_progress }
			planet_event = { id = autofab_queue.4 days = 1 }
		}
	}
	else = {
		planet_event = { id = autofab_queue.5 }
	}
}

start_autofab = {
	if = {
		limit = {
			has_planet_flag = building_autofab
		}
		autofab_time_loop = yes
	}
	else = {
		autofab_time_set = yes
		pay_for_autofab = yes
		set_planet_flag = factory_expanding
		set_planet_flag = building_autofab
		add_modifier = { modifier = factory_expansion }
		autofab_time_loop = yes
	}
}
autofab_time_set = {
	set_variable = { which = autofab_construction_time value = @autofab_construction_time }
	if = {
		limit = {
			owner = { has_active_tradition = tr_autofab_finish }
		}
		divide_variable = { which = autofab_construction_time value = 2 }
	}
}
add_autofab = {
	set_autofab_variables_initial = yes
	add_deposit = autofab
	set_planet_flag = has_autofab
	remove_planet_flag = factory_expanding
	remove_modifier = factory_expansion
	remove_planet_flag = building_autofab
	change_variable = { which = autofabs value = 1 }
	set_variable = { which = roci_autofab_jobs value = value:roci_autofab_jobs }
}

autofab_module_time_set = {
	set_variable = { which = autofab_module_construction_time value = @factory_construction_time }
	if = {
		limit = {
			owner = { has_active_tradition = tr_autofab_finish }
		}
		divide_variable = { which = autofab_module_construction_time value = 2 }
	}
	add_modifier = { modifier = factory_expansion }
}

autofab_module_time_loop = {
	if = {
		limit = {
			check_variable = { which = autofab_module_construction_time value > 0 }
		}
		set_variable = { which = autofab_module_build_speed value = 0 }
		export_modifier_to_variable = { modifier = planet_building_build_speed_mult variable = autofab_module_build_speed }
		change_variable = { which = autofab_module_build_speed value = 1 }
		if = {
			limit = {
				check_variable = { which = autofab_module_construction_time value >= 30 }
			}
			set_variable = { which = autofab_module_construction_progress value = 30 }
			multiply_variable = { which = autofab_module_construction_progress value = autofab_module_build_speed }
			round_variable = autofab_module_construction_progress
			subtract_variable = { which = autofab_module_construction_time value = autofab_module_construction_progress }
			planet_event = { id = $module_event_1$ days = 30 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_module_construction_time value >= 15 }
			}
			set_variable = { which = autofab_module_construction_progress value = 15 }
			multiply_variable = { which = autofab_module_construction_progress value = autofab_module_build_speed }
			round_variable = autofab_module_construction_progress
			subtract_variable = { which = autofab_module_construction_time value = autofab_module_construction_progress }
			planet_event = { id = $module_event_1$ days = 15 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_module_construction_time value >= 10 }
			}
			set_variable = { which = autofab_module_construction_progress value = 10 }
			multiply_variable = { which = autofab_module_construction_progress value = autofab_module_build_speed }
			round_variable = autofab_module_construction_progress
			subtract_variable = { which = autofab_module_construction_time value = autofab_module_construction_progress }
			planet_event = { id = $module_event_1$ days = 10 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_module_construction_time value >= 5 }
			}
			set_variable = { which = autofab_module_construction_progress value = 5 }
			multiply_variable = { which = autofab_module_construction_progress value = autofab_module_build_speed }
			round_variable = autofab_module_construction_progress
			subtract_variable = { which = autofab_module_construction_time value = autofab_module_construction_progress }
			planet_event = { id = $module_event_1$ days = 5 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_module_construction_time value >= 3 }
			}
			set_variable = { which = autofab_module_construction_progress value = 3 }
			multiply_variable = { which = autofab_module_construction_progress value = autofab_module_build_speed }
			round_variable = autofab_module_construction_progress
			subtract_variable = { which = autofab_module_construction_time value = autofab_module_construction_progress }
			planet_event = { id = $module_event_1$ days = 2 }
		}
		else_if = {
			limit = {
				check_variable = { which = autofab_module_construction_time value >= 1 }
			}
			set_variable = { which = autofab_module_construction_progress value = 1 }
			multiply_variable = { which = autofab_module_construction_progress value = autofab_module_build_speed }
			round_variable = autofab_module_construction_progress
			subtract_variable = { which = autofab_module_construction_time value = autofab_module_construction_progress }
			planet_event = { id = $module_event_1$ days = 1 }
		}
		#Do calcs for the planet modifier
		set_variable = { which = autofab_module_progress value = value:autofab_module_progress }
		
		set_variable = { which = projected_autofab_construction_time value = value:projected_autofab_construction_time }
		
		set_variable = { which = autofab_queue_time value = value:autofab_queue_time }
		set_variable = { which = projected_autofab_queue_time value = value:projected_autofab_queue_time }
	}
	else = {
		planet_event = { id = $module_event_2$ }
	}
}

autofab_construction_start_flags = {
	set_planet_flag = factory_expanding
	set_planet_flag = factory_building_$module_type$
	add_deposit = autofab_construction_module
	fire_on_action = { on_action = on_autofab_module_started }
}
autofab_construction_end_flags = {
	remove_planet_flag = factory_expanding
	remove_modifier = factory_expansion
	remove_planet_flag = factory_building_$module_type$
	remove_deposit = autofab_construction_module
	fire_on_action = { on_action = on_autofab_module_completed }
}

start_autofab_power = {
	if = {
		limit = {
			has_planet_flag = factory_building_generator
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.20
			module_event_2 = autofab_queue.21
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = generator
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.20
			module_event_2 = autofab_queue.21
		}
	}
}
add_autofab_power = {
	add_deposit = autofab_power
	change_variable = { which = autofab_power value = 1 }
	autofab_construction_end_flags = {
		module_type = generator
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Generator built for [PREV.GetName] on [This.GetName]"
	}
	owner = {
		if = {
			limit = { has_event_chain = mandate_district_generator_chain }
			add_event_chain_counter = {
				event_chain = "mandate_district_generator_chain"
				counter = "built_district"
				amount = 1
			}
		}
	}
}
start_autofab_mine = {
	if = {
		limit = {
			has_planet_flag = factory_building_mine
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.22
			module_event_2 = autofab_queue.23
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = mine
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.22
			module_event_2 = autofab_queue.23
		}
	}
}
add_autofab_mine = {
	add_deposit = autofab_mine
	change_variable = { which = autofab_mine value = 1 }
	autofab_construction_end_flags = {
		module_type = mine
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Mine built for [PREV.GetName] on [This.GetName]"
	}
	owner = {
		if = {
			limit = { has_event_chain = mandate_district_mining_chain }
			add_event_chain_counter = {
				event_chain = "mandate_district_mining_chain"
				counter = "built_district"
				amount = 1
			}
		}
	}
}

start_autofab_farm = {
	if = {
		limit = {
			has_planet_flag = factory_building_farm
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.24
			module_event_2 = autofab_queue.25
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = farm
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.24
			module_event_2 = autofab_queue.25
		}
	}
}
add_autofab_farm = {
	add_deposit = autofab_farm
	change_variable = { which = autofab_farm value = 1 }
	autofab_construction_end_flags = {
		module_type = farm
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Farm built for [PREV.GetName] on [This.GetName]"
	}
	owner = {
		if = {
			limit = { has_event_chain = mandate_district_farming_chain }
			add_event_chain_counter = {
				event_chain = "mandate_district_farming_chain"
				counter = "built_district"
				amount = 1
			}
		}
	}
}

start_autofab_foundry = {
	if = {
		limit = {
			has_planet_flag = factory_building_foundry
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.26
			module_event_2 = autofab_queue.27
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = foundry
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.26
			module_event_2 = autofab_queue.27
		}
	}
}
add_autofab_foundry = {
	add_deposit = autofab_foundry
	change_variable = { which = autofab_foundry value = 1 }
	autofab_construction_end_flags = {
		module_type = foundry
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Foundry built for [PREV.GetName] on [This.GetName]"
	}
}

start_autofab_factory = {
	if = {
		limit = {
			has_planet_flag = factory_building_factory
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.28
			module_event_2 = autofab_queue.29
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = factory
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.28
			module_event_2 = autofab_queue.29
		}
	}
}
add_autofab_factory = {
	add_deposit = autofab_factory
	change_variable = { which = autofab_factory value = 1 }
	autofab_construction_end_flags = {
		module_type = factory
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Factory built for [PREV.GetName] on [This.GetName]"
	}
}

start_autofab_chemical = {
	if = {
		limit = {
			has_planet_flag = factory_building_chemical
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.30
			module_event_2 = autofab_queue.31
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = chemical
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.30
			module_event_2 = autofab_queue.31
		}
	}
}
add_autofab_chemical = {
	add_deposit = autofab_motes_refinery
	change_variable = { which = autofab_chemical value = 1 }
	autofab_construction_end_flags = {
		module_type = chemical
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Chemical built for [PREV.GetName] on [This.GetName]"
	}
}

start_autofab_refinery = {
	if = {
		limit = {
			has_planet_flag = factory_building_refinery
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.32
			module_event_2 = autofab_queue.33
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = refinery
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.32
			module_event_2 = autofab_queue.33
		}
	}
}
add_autofab_refinery = {
	add_deposit = autofab_gases_refinery
	change_variable = { which = autofab_refinery value = 1 }
	autofab_construction_end_flags = {
		module_type = refinery
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Refinery built for [PREV.GetName] on [This.GetName]"
	}
}

start_autofab_translucer = {
	if = {
		limit = {
			has_planet_flag = factory_building_translucer
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.34
			module_event_2 = autofab_queue.35
		}
	}
	else = {
		autofab_module_time_set = yes
		pay_for_district = yes
		autofab_construction_start_flags = {
			module_type = translucer
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.34
			module_event_2 = autofab_queue.35
		}
	}
}
add_autofab_translucer = {
	add_deposit = autofab_crystals_refinery
	change_variable = { which = autofab_translucer value = 1 }
	autofab_construction_end_flags = {
		module_type = translucer
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Translucer built for [PREV.GetName] on [This.GetName]"
	}
}

start_autofab_extractor = {
	if = {
		limit = {
			has_planet_flag = factory_building_extractor
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.36
			module_event_2 = autofab_queue.37
		}
	}
	else = {
		pay_for_district = yes
		autofab_module_time_set = yes
		autofab_construction_start_flags = {
			module_type = extractor
		}
		autofab_module_time_loop = {
			module_event_1 = autofab_queue.36
			module_event_2 = autofab_queue.37
		}
	}
}
add_autofab_extractor = {
	add_deposit = autofab_refinery_extractor
	set_planet_flag = has_autofab_extractor
	autofab_construction_end_flags = {
		module_type = extractor
	}
	if = {
		limit = {
			has_global_flag = autofab_logging
		}
		log = "Extractor built for [PREV.GetName] on [This.GetName]"
	}
}

retooling_bonus = {
	owner = {
		add_resource = {
			alloys = @factoryalloycost
		}
	}
}

autofab_retool_start_flags = {
	add_modifier = { modifier = factory_expansion }
	set_planet_flag = factory_expanding
	set_planet_flag = factory_retooling_$module_type$
	planet_event = { id = autofab_queue.$retool_event$ days = @factory_retool_time }
	fire_on_action = { on_action = on_autofab_retool_started }
}
autofab_retool_end_flags = {
	remove_planet_flag = factory_expanding
	remove_modifier = factory_expansion
	remove_planet_flag = factory_retooling_$module_type$
	remove_deposit = autofab_$module$
	change_variable = { which = autofab_$module$ value = -1 }
	retooling_bonus = yes
	fire_on_action = { on_action = on_autofab_retool_completed }
}

start_autofab_power_retool = {
	autofab_retool_start_flags = {
		module_type = generator
		retool_event = 62
	}
}
retool_autofab_power = {
	autofab_retool_end_flags = {
		module_type = generator
		module = power
	}
}

start_autofab_mine_retool = {
	autofab_retool_start_flags = {
		module_type = mine
		retool_event = 64
	}
}
retool_autofab_mine = {
	autofab_retool_end_flags = {
		module_type = mine
		module = mine
	}
}

start_autofab_farm_retool = {
	autofab_retool_start_flags = {
		module_type = farm
		retool_event = 66
	}
}
retool_autofab_farm = {
	autofab_retool_end_flags = {
		module_type = farm
		module = farm
	}
}

start_autofab_foundry_retool = {
	autofab_retool_start_flags = {
		module_type = foundry
		retool_event = 68
	}
}
retool_autofab_foundry = {
	autofab_retool_end_flags = {
		module_type = foundry
		module = foundry
	}
}

start_autofab_factory_retool = {
	autofab_retool_start_flags = {
		module_type = factory
		retool_event = 70
	}
}
retool_autofab_factory = {
	autofab_retool_end_flags = {
		module_type = factory
		module = factory
	}
}

start_autofab_refinery_retool = {
	autofab_retool_start_flags = {
		module_type = refinery
		retool_event = 72
	}
}
retool_autofab_refinery = {
	autofab_retool_end_flags = {
		module_type = refinery
		module = gases_refinery
	}
}

start_autofab_chemical_retool = {
	autofab_retool_start_flags = {
		module_type = chemical
		retool_event = 74
	}
}
retool_autofab_chemical = {
	autofab_retool_end_flags = {
		module_type = chemical
		module = motes_refinery
	}
}

start_autofab_translucer_retool = {
	autofab_retool_start_flags = {
		module_type = translucer
		retool_event = 76
	}
}
retool_autofab_translucer = {
	autofab_retool_end_flags = {
		module_type = translucer
		module = crystals_refinery
	}
}

start_autofab_extractor_retool = {
	autofab_retool_start_flags = {
		module_type = extractor
		retool_event = 78
	}
}
retool_autofab_extractor = {
	autofab_retool_end_flags = {
		module_type = extractor
		module = refinery_extractor
	}
}