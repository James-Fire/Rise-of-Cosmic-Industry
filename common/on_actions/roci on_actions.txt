on_game_start = {
	events = {
		roci_menu.1
		autofab_dmm.1		# New Dynamic Mod Menu support.
		exploit_dmm.1		# New Dynamic Mod Menu support.
	}
}
on_game_start_country = {
	events = {
		exodus_fleet.1
	}
}
on_press_begin = {
	events = {
		#roci_menu.2
	}
}
on_single_player_save_game_load = {
	events = {
		autofab_dmm.1		# New Dynamic Mod Menu support.
		exploit_dmm.1		# New Dynamic Mod Menu support.
	}
}
dmm_mod_selected = {
	events = {
		autofab_dmm.2		# New Dynamic Mod Menu support.
		exploit_dmm.2		# New Dynamic Mod Menu support.
	}
}
on_yearly_pulse = {
	events = {
		spaceexploitAI.10000
		spaceexploit.41
		
		orbitalinfra.4
		
		autofab_automation.0
		autofab.30
		autofab_queue.0
	}
}
on_yearly_pulse_country = {
	events = {
		autofab.5
		
		roci_menu.40
		
		kiyo_trade_triggered_event.8
	}
}
on_monthly_pulse = {
	events = {
		spaceexploitAI.1000
		
		orbitalinfra.3
		
		kiyo_trade_triggered_event.2
	}
}

on_monthly_pulse_country = {
	events = {
		realdev.100
		
		spaceexploitAI.11
		
		realdev.92
		
		shipping.5
	
		exodus_fleet.10
	}
}

# A leader leveled up.
# Scope = Country
# From = Leader
on_leader_level_up = {
	events = {
		realdev.6
	}
}

# Scope: Leader (after assignment)
on_leader_assigned = {
	events = {
		realdev.7
	}
}

# Executed as new ruler has been set
# This = Country
on_ruler_set = {
	events = {
		realdev.6
	}
}

# A country has increased the level of a tech, use last_increased_tech trigger to check tech and level.
# This = Country
on_tech_increased = {
	events = {
		orbitalinfra.1
		
		realdev.8
		
		kiyo_trade_triggered_event.1
	}
}
on_district_complete = {
	events = {
		autofab.20
		
		orbitalinfra.2
		#orbitalinfra.20
	}
}
on_district_demolished = {
	events = {
		orbitalinfra.2
	}
}
on_building_upgraded = {
	events = {
		orbitalinfra.7
	}
}
on_building_complete = {
	events = {
		orbitalinfra.7
		
		autofab.20
	}
}
on_ship_designed = {
	events = {
		orbitalinfra.8
	}
}

# Triggered when an Empire has fleets within another Empire's borders.
# This = receiver
# From = sender
# FromFrom = fleet
# FromFromFrom = system
on_enforce_borders = {
    events = {
		kiyo_trade_triggered_event.11
    }
}

# A war is beginning, executed for every country in the war.
# Root = Country
# From = War
on_war_beginning = {
	events = {
		kiyo_trade_triggered_event.12
	}
}

# This = owner of fleet 1 (winner)
# From = owner of fleet 2 (loser)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_space_battle_won = {
	events = {
		orbitalinfra.5
	}
}
# A Megastructure has begun to be upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgrade_begin = {
	events = {
		realdev.9
	}
}

# A Megastructure has been upgraded
# Root = Country
# From = Megastructure
# FromFrom = System
on_megastructure_upgraded = {
	events = {
		realdev.91
	}
}

# A planet has been colonized.
# Scope = Planet
on_colonized = {
	events = {
		shipping.1
	}
}

# Planet has been terraformed
# This = Planet
# From = Terraforming country
on_terraforming_complete = {
	events = {
		autofab.5
		autofab.30
		
		shipping.1
	}
}

#You have changed the location of your capital. Also called when a country's capital is first set e.g. during galaxy creation (but then FROM is not set)
#this/root = new capital
#from = old capital
on_capital_changed = {
	events = {
		
	}
}

#From = Planet scope
#This = Fleet scope
on_fleet_enter_orbit = {
	events = {
		### IF THIS ON_ACTION WORKED CORRECTLY, USE THIS ###
		#kiyo_trade_triggered_event.X1
		#kiyo_trade_triggered_event.X2
		#kiyo_trade_triggered_event.X3
	}
}

# This = owner of fleet 1
# From = owner of fleet 2
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_entering_battle = {
	events = {
		kiyo_trade_triggered_event.3
	}
}

# This = owner of ship 1 (destroyed)
# From = owner of ship 2 (combatant)
# FromFrom = ship 1
# FromFromFrom = ship 2
on_ship_destroyed_victim = {
	events = {
		kiyo_trade_triggered_event.32
	}
}

# This = owner of fleet 1 (destroyed)
# From = owner of fleet 2 (combatant)
# FromFrom = fleet 1
# FromFromFrom = fleet 2
on_fleet_destroyed_victim = {
	events = {
		kiyo_trade_triggered_event.31
	}
}

# This = owner of fleet
# From = disbanded fleet
on_fleet_disbanded = {
	events = {
		kiyo_trade_triggered_event.4
		kiyo_trade_triggered_event.5
	}
}
#From = Planet/Starbase/Megastructure scope
#This = Fleet scope
on_fleet_enter_orbit = {
	events = {
		kiyo_trade_orbit_event.1
		kiyo_trade_orbit_event.11
	}
}

#Custom on_actions

#Country Scope, no predefined scopes
exploit_apply_queue = {
	events = {
		spaceexploitAI.10001
	}
}
#Country Scope, no predefined scopes
autofab_apply_queue = {
	events = {
		autofab_queue.1
	}
}
#Planet Scope, no predefined scopes
#from = owner
autofab_apply_planet_queue = {
	events = {
		autofab_queue.8
	}
}
#Planet Scope, no predefined scopes
on_autofab_module_started = {
	events = {
		
	}
}
#Planet Scope, no predefined scopes
on_autofab_module_completed = {
	events = {
		roci_menu.41
		autofab_queue.8
	}
}
#Planet Scope, no predefined scopes
on_autofab_retool_started = {
	events = {
	
	}
}
#Planet Scope, no predefined scopes
on_autofab_retool_completed = {
	events = {
		roci_menu.41
		autofab_queue.8
	}
}
#Planet Scope
#from = space_owner
on_exploit_colony_completed = {
	events = {
		roci_menu.41
	}
}
#Planet Scope
#from = space_owner
on_exploit_construction_started = {
	events = {
	
	}
}
#Planet Scope
#from = space_owner
on_exploit_construction_completed = {
	events = {
	
	}
}